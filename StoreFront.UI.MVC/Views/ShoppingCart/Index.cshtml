@*@model IEnumerable<StoreFront.UI.MVC.Models.CartItemViewModel>*@
@model Dictionary<int, StoreFront.UI.MVC.Models.CartItemViewModel>

@{
    ViewBag.Title = "Shopping Cart";

    //local variables for calcs on the page
    decimal? cartTotal = 0;
    int totalCountOfITems = 0;
}

<div id="content">
    <div class="container">
        <div class="row">
            <div class="span12">
                <div id="content_inner">
                    <h2>@ViewBag.Title</h2>


                    @if (Model.Count() == 0)
                    {
                        <p class="alert alert-success text-center" style="background-color: #725583; color: white; font-size: 15px;">
                            There are no items in your cart.
                        </p>
                    }
                    else
                    {
                        <table class="table">
                            <tr>
                                <th style="font-size: 15px;">
                                    Item
                                </th>
                                <th style="font-size: 15px;">
                                    Quantity
                                </th>
                                <th style="font-size: 15px;">
                                    Title
                                </th>
                                <th style="font-size: 15px;">
                                    Price
                                </th>
                                <th style="font-size: 15px;">
                                    Total
                                </th>
                                <th></th>
                            </tr>

                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <a href="@Url.Action("ProductDetail", "Home", new { id = item.Value.Product.ProductID })">
                                            <img src="@item.Value.Product.Image.Image1" alt="@item.Value.Product.Title cover image" style="height: 125px; width: 125px;" class="borderCurve boxShadow" />
                                        </a>
                                        @*<img src="@item.Value.Product.Image.Image1" alt="Book Cover for @item.Value.Product.Title" title="@item.Value.Product.Title" />*@
                                    </td>
                                    <td>
                                        @* v1 just showing the quantity *@
                                        @*@item.Value.Qty*@

                                        @* v2 showing the quantity in a textbox that allows us to update *@

                                        @using (Html.BeginForm("UpdateCart", "ShoppingCart", FormMethod.Post))
                                        {
                                            @Html.Hidden("productId", item.Key)
                                            @Html.TextBox("qty", item.Value.Qty, new { @class = "form-control", style = "max-width: 50px; display: inline;" })
                                            <input type="submit" value="Update Quantity" class="button1" />
                                        }

                                        @{
                                            //calculate the running total
                                            totalCountOfITems += item.Value.Qty;
                                        }

                                    </td>
                                    <td>
                                        <span style="font-size: 15px;">@item.Value.Product.Title</span>
                                        <br />
                                        @if (item.Value.Product.Color != null)
                                        {
                                            <span style="font-size: 15px;">Color:</span>
                                            <span style="font-size: 15px;">
                                                @item.Value.Product.Color.Color1
                                            </span>
                                        }
                                        <br />
                                        @if (item.Value.Product.Size != null)
                                        {
                                            <span style="font-size: 15px;">Size:</span>
                                            <span style="font-size: 15px;">
                                                @item.Value.Product.Size.Size1
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        <span style="font-size: 15px;">@string.Format($"{item.Value.Product.Price:c}")</span>
                                    </td>
                                    <td>
                                        @{
                                            //Calculate line total andn update running total variable
                                            decimal? lineTtoal = item.Value.Qty * item.Value.Product.Price;
                                            cartTotal += lineTtoal;
                                        }

                                        <span style="font-size: 15px;">@string.Format($"{lineTtoal:c}")</span>

                                    </td>
                                    <td>
                                        @Html.ActionLink("Remove From Cart", "RemoveFromCart", new { id = item.Key }, new { @class = "button1 noUnderLine" })
                                    </td>
                                </tr>
                            }

                        </table>

                        <p class="alert alert-success text-center" style="background-color: #725583; color: white; font-size: 15px; pull-right">
                            You have @totalCountOfITems item@(totalCountOfITems == 1 ? "" : "s") in your cart.
                            Your total before taxes and shipping is @string.Format($"{cartTotal:c}")
                        </p>

                    }
                </div>
            </div>
        </div>
    </div>
</div>