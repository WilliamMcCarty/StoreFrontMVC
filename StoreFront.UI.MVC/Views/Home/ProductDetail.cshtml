@model IEnumerable<StoreFront.DATA.EF.Product>

@{
    ViewBag.Title = "Product Details";
}

<center><h2>@ViewBag.Title</h2></center>
<br />
<br />

@foreach (var item in Model)
{
    @*<center>
            <div class="card mb-3" style="max-width: 540px;">
                <div class="row no-gutters">
                    <div class="col-md-4">
                        <h5 class="card-title detailTitleFontSize">@Html.DisplayFor(modelItem => item.Title)</h5>
                        <img src="@item.Image.Image1" alt="@item.Title cover image" style="height: 470px; width: 470px;" class="borderCurve boxShadow" />
                    </div>
                    <div class="col-md-8">
                        <div class="card-body">
                            <br />
                            <p class="card-text detailDescriptionFontSize">@Html.DisplayFor(modelItem => item.Description)</p>
                            <p class="card-text detailPriceFontSize"><small class="text-muted">@Html.DisplayFor(modelItem => item.Price)</small></p>
                            <form>
                                <input type="button" value="Back to Previous Page"
                                       onClick="javascript: history.go(-1)" class="button1">
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </center>*@


    @*<div class="container-fluid">
            <div class="row-fluid">
                <div class="span8">
                    <img src="@item.Image.Image1" alt="@item.Title cover image" style="height: 470px; width: 470px;" class="borderCurve boxShadow" />
                </div>

                <div class="span7">
                    <img src="@item.Image.Image1" alt="@item.Title cover image" style="height: 470px; width: 470px; float:left;" class="borderCurve boxShadow" />
                    <h5 class="card-title detailTitleFontSize">@Html.DisplayFor(modelItem => item.Title)</h5>
                    <p class="card-text detailDescriptionFontSize">@Html.DisplayFor(modelItem => item.Description)</p>
                    <p class="card-text detailPriceFontSize">
                        <small class="text-muted">@Html.DisplayFor(modelItem => item.Price)</small>
                        <form>
                            <input type="button" value="Back to Previous Page"
                                   onClick="javascript: history.go(-1)" class="button1">
                        </form>
                </div>

                <form>
                    <input type="button" value="Back to Previous Page"
                           onClick="javascript: history.go(-1)" class="button1">
                </form>
            </div>
        </div>*@

    @*<br />
        <br />*@
    <center>
        <div class="container-fluid">
            <div class="row-fluid">
                <center>
                    <table>
                        <tbody>
                            <tr>
                                <td valign="top" style="max-height: 470px; max-width: 470px; padding: 10px;">
                                    <div>
                                        <img src="@item.Image.Image1" alt="@item.Title cover image" style="max-height: 470px; max-width: 470px;" class="borderCurve boxShadow" />
                                    </div>
                                </td>
                                <td valign="top" style="max-height: 470px; max-width: 470px;">
                                    <div>
                                        <h5 class="card-title detailTitleFontSize">@Html.DisplayFor(modelItem => item.Title)</h5>
                                        <p class="card-text detailDescriptionFontSize">@*@Html.DisplayFor(modelItem => item.Description)*@ @Html.Raw(item.Description)</p>

                                        @if (item.ColorVariantID != null)
                                        {
                                            <p class="card-text detailDescriptionFontSize">Color: @item.Color.Color1</p>
                                        }

                                        @if (item.SizeVariantID != null)
                                        {
                                            <p class="card-text detailDescriptionFontSize">Size: @item.Size.Size1</p>
                                        }

                                        @if (item.Stock == 0)
                                        {
                                            <p class="card-text detailDescriptionFontSize">Status: Out Of Stock</p>
                                        }
                                        else
                                        {
                                            <p class="card-text detailDescriptionFontSize">Status: In Stock</p>
                                        }

                                        <p class="card-text detailDescriptionFontSize">Stock: @Html.DisplayFor(modelItem => item.Stock)</p>

                                        <p class="card-text detailPriceFontSize">
                                            <small class="text-muted">
                                                Price: @Html.DisplayFor(modelItem => item.Price)
                                                @if (item.Stock == 1)
                                                {
                                                    <span> - Only 1 Left</span>
                                                }
                                            </small>
                                        </p>
                                    </div>
                                    @using (Html.BeginForm("AddToCart", "ShoppingCart", new { productid = item.ProductID }, FormMethod.Post, new { @class = "" }))
                                    {
                                        @*<span class="label">Quantity: </span>*@
                                        @Html.TextBox("Qty", 1, new { @class = "form-control", style = "max-width: 50px; display: none;" })
                                        if (item.Stock == 0)
                                        {
                                            <input type="submit" value="Add To Cart" class="button1" style="width:259px;" disabled="disabled" />
                                        }
                                        else
                                        {
                                            <input type="submit" value="Add To Cart" class="button1" style="width:259px;" />
                                        }

                                    }
                                    @*<input type="button" value="Add to Cart"
                                        onClick="#" class="button1" style="width:259px;">*@
                                    <form>
                                        <input type="button" value="Back to Previous Page"
                                               onClick="javascript: history.go(-1)" class="button1">
                                    </form>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </center>
            </div>
        </div>
    </center>
    <br />
    <br />

    
}
