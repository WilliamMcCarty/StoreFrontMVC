@model StoreFront.DATA.EF.Product

@{
    ViewBag.Title = "Edit";
}

<div id="content">
    <div class="container">
        <div class="row">
            <div class="span12">
                <div id="content_inner">
                    <h2>Edit</h2>


                    @using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <h4>Product</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.ProductID)
                            @Html.HiddenFor(model => model.ImageID)

                            <div class="form-group">
                                @Html.LabelFor(model => model.SizeVariantID, "SizeVariantID", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    &nbsp;&nbsp;&nbsp;
                                    @Html.DropDownList("SizeVariantID", null, "Select A Size", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SizeVariantID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.ColorVariantID, "ColorVariantID", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    &nbsp;&nbsp;&nbsp;
                                    @Html.DropDownList("ColorVariantID", null, "Select A Color", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ColorVariantID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.CategoriesID, "CategoriesID", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    &nbsp;&nbsp;&nbsp;
                                    @Html.DropDownList("CategoriesID", null, htmlAttributes: new { @class = "form-control adminControlsDrop" })
                                    @Html.ValidationMessageFor(model => model.CategoriesID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    &nbsp;&nbsp;&nbsp;
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control adminControlsMultiTextBox" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                @*@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })*@
                                <div class="col-md-10">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })<br /><br />
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control adminControlsMultiTextBox" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.SKU, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    &nbsp;&nbsp;&nbsp;
                                    @Html.EditorFor(model => model.SKU, new { htmlAttributes = new { @class = "form-control adminControlsTextBox" } })
                                    @Html.ValidationMessageFor(model => model.SKU, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    &nbsp;&nbsp;&nbsp;
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control adminControlsTextBox" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    &nbsp;&nbsp;&nbsp;
                                    @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control adminControlsTextBox" } })
                                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.StatusID, "StatusID", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    &nbsp;&nbsp;&nbsp;
                                    @Html.DropDownList("StatusID", null, "Select A Status", htmlAttributes: new { @class = "form-control adminControlsDrop" })
                                    @Html.ValidationMessageFor(model => model.StatusID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.ImageID, "ImageID", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    &nbsp;&nbsp;&nbsp;
                                    @*@Html.DropDownList("ImageID", null, htmlAttributes: new { @class = "form-control adminControlsDrop" })
                                        @Html.ValidationMessageFor(model => model.ImageID, "", new { @class = "text-danger" })*@
                                    <input type="file" name="storeImage" class="adminControlsTextBox" />
                                </div>
                            </div>

                            @*<div class="form-group">
                                    @Html.LabelFor(model => model.ImageID1, "ImageID1", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("ImageID1", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ImageID1, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ImageID2, "ImageID2", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("ImageID2", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ImageID2, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ImageID3, "ImageID3", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("ImageID3", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ImageID3, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ImageID4, "ImageID4", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("ImageID4", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ImageID4, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ImageID5, "ImageID5", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("ImageID5", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ImageID5, "", new { @class = "text-danger" })
                                    </div>
                                </div>*@
                            <br />
                            <div class="form-group">
                                @Html.LabelFor(model => model.SupplierID, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    &nbsp;&nbsp;&nbsp;
                                    @Html.EditorFor(model => model.SupplierID, new { htmlAttributes = new { @class = "form-control adminControlsTextBox" } })
                                    @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                                    <input type="submit" value="Save" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }

                    <div>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {
            $("#datepicker").datepicker({
                changeMonth: true,
                changeYear: true
            });
        });
    </script>

    @*<script>
            document.getElementById('BookImg').onchange = function (evt) {
                var tgt = evt.target || window.event.srcElement,
                    files = tgt.files;

                // FileReader support
                if (FileReader && files && files.length) {
                    var fr = new FileReader();
                    fr.onload = function () {
                        document.getElementById('img').src = fr.result;
                    }
                    fr.readAsDataURL(files[0]);
                }

                // Not supported
                else {
                    // fallback -- perhaps submit the input to an iframe and temporarily store
                    // them on the server until the user's session ends.
                }
            }
        </script>*@
}
